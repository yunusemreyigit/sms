# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn -B package -DskipTests --file pom.xml

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
         username: ${{ secrets.DOCKERHUB_USERNAME }}
         password: ${{ secrets.DOCKERHUB_PWD }}

      - name: Image Build and Push
        uses: docker/build-push-action@v5
        with:
         context: .
         file: ./Dockerfile
         push: true
         tags: ${{ secrets.DOCKERHUB_USERNAME }}/sms:latest

      - name: Send The Jar File To The Cloud
        # You may pin to the exact commit or the version.
        # uses: swillner/sftp-sync-action@629e1fe7a2db87d0f1da0e15a970b514fe398c09
        uses: swillner/sftp-sync-action@v1.0
        with:
          server: ${{ secrets.FTP_SERVER }}
          user: ${{ secrets.FTP_USER }}
          # Private SSH key for user (include via secrets if possible)
          user_private_key: ${{ secrets.FTP_PWD }}
          # Public SSH key of host
          #host_public_key: # default is
          local: ../../target/SWE304-0.0.1-SNAPSHOT.jar
          remote: /home/ec2-user/



